@page "/characters"
@using Larp.Data

@inject LandingService LandingService
@inject NavigationManager NavigationManager
@inject ILogger<CharacterList> Logger

<PageHeader>Your Characters</PageHeader>

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudPaper Elevation="2" Style="margin-top: 1em;">
        @if (Characters == null || Games == null)
        {
            <MudList>
                <MudListItem>
                    <MudProgressCircular Style="margin: 32px;"/>
                </MudListItem>
            </MudList>
        }

        @if (Characters != null && Games != null)
        {
            <MudList Clickable Style="width: 100%; margin: 0" SelectedValueChanged="href => NavigationManager.NavigateTo((string)href)">
                    @foreach (var game in Games)
                    {
                        <MudListSubheader><div style="padding-left: 1em">@game.Title</div></MudListSubheader>
                        @foreach (var character in Characters.Where(x => x.GameName == game.Name).OrderBy(x => x.Name))
                        {
                            <MudListItem
                                Icon="@Icons.Material.Filled.Person"
                                Value="@($"/characters/{game.Name}/{character.Id}")">
                                <MudText Typo="Typo.body1">@character.Name</MudText>
                                <MudText Typo="Typo.body2">@character.Summary</MudText>
                            </MudListItem>
                        }
                        <MudListItem 
                            Icon="@Icons.Material.Filled.Add"
                            Value="@($"/characters/{game.Name}/new")"
                            Text="@($"Draft a new {game.Title} character")"
                            />
                    }
            </MudList>
        }
    </MudPaper>
</MudContainer>

@code {
    // ReSharper disable InconsistentNaming
    CharacterSummary[]? Characters;
    Game[]? Games;
    
    protected override async Task OnInitializedAsync()
    {
        Characters = await LandingService.GetCharacters();
        Games = await LandingService.GetGames();
    }
}