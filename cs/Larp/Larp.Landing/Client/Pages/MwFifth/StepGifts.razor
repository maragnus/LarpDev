@using Larp.Landing.Shared.MwFifth
<MudText Typo="Typo.h6">Select your gifts</MudText>
<MudText Typo="Typo.body2">Gifts provide various abilities. Some gifts provide usable as often as you like, some of which are more limited.</MudText>

<StepDivider/>

<MudGrid>
    @foreach (var gift in _gifts)
    {
        <MudItem xs="12" sm="6" md="6" Class="align-center">
            <MudStack Row="true">
                <MudAvatar>@gift.Value</MudAvatar>
                <div>
                    <MudText Typo="Typo.h6">@gift.Name</MudText>
                    <MudRating SelectedValue="@gift.Value" MaxValue="10" SelectedValueChanged="@gift.Update"/>
                    <MudText Typo="Typo.caption">@gift.Description</MudText>
                </div>
            </MudStack>
        </MudItem>
    }
</MudGrid>

@if (_abilities.Length > 0)
{
    <StepDivider/>
    <MudText Typo="Typo.h6">Your abilities</MudText>
    <MudChipSet>
        @foreach (var ability in _abilities)
        {
            <MudChip>@ability</MudChip>
        }
    </MudChipSet>
}

@if (_properties.Length > 0)
{
    <StepDivider/>
    <MudText Typo="Typo.h6">Your properties</MudText>
    <MudTable T="GiftPropertyValue" Items="_properties">
        <HeaderContent>
            <MudTh>Property</MudTh>
            <MudTh>Value</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Property">@context.Name</MudTd>
            <MudTd DataLabel="Value">@context.Value</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {

    [Parameter]
    public CharacterBuilder Character { get; set; } = null!;

    class GiftInfo
    {
        private readonly Action<int> _update;
        private readonly Action _changed;
        public string Name { get; }
        public int Value { get; set; }
        public string Description { get; }

        public GiftInfo(string name, int value, Action<int> update, Action changed, string description)
        {
            _update = update;
            _changed = changed;
            Name = name;
            Value = value;
            Description = description;
        }

        public void Update(int newValue)
        {
            Value = newValue;
            _update(newValue);
            _changed();
        }
    }

    private GiftInfo[] _gifts = Array.Empty<GiftInfo>();
    private string[] _abilities = Array.Empty<string>();
    private GiftPropertyValue[] _properties = Array.Empty<GiftPropertyValue>();
    private bool _isNewCharacter;

    protected override void OnInitialized()
    {
        _isNewCharacter = Character.Character.PreviousId == null;

        _gifts = new[]
        {
            new GiftInfo("Courage", Character.Courage, value => Character.Courage = value, GiftChanged,
                "The Gift of Courage increases your constitution, resolve, resistance to fear, and tolerance for pain. With this Gift, you will gain the ability to triumph over adversity. You will be more durable in combat, and less dependent on healing from others."),
            new GiftInfo("Dexterity", Character.Dexterity, value => Character.Dexterity = value, GiftChanged,
                "The Gift of Dexterity grants you quick wits and nimbleness. You may or may not be agile (that really depends on what you, the player, are capable of), but your coordination allows you to perform prodigious feats."),
            new GiftInfo("Empathy", Character.Empathy, value => Character.Empathy = value, GiftChanged,
                "This gives you the kindness and compassion to help those who are wounded, whether with magic, a few encouraging words, mundane bandaging, or a kick in the pants."),
            new GiftInfo("Passion", Character.Passion, value => Character.Passion = value, GiftChanged,
                "Characters with the gift of Passion are often called “summoners” or “elementalists”. They are able to channel naturally occurring elemental energy through themselves into damaging bolts, bursts, and storms."),
            new GiftInfo("Prowess", Character.Prowess, value => Character.Prowess = value, GiftChanged,
                "Prowess is a Gift that thrives in the heart of battle. Warriors with this Gift have a natural talent for weapons, and the strength to challenge their enemies head on."),
            new GiftInfo("Wisdom", Character.Wisdom, value => Character.Wisdom = value, GiftChanged,
                "The Gift of Wisdom is based on knowledge and understanding of the Mystwood world, which unlocks the power of magic. A character with this Gift can rely on powerful spells, unleashed with a mere gesture, and can counter the spells of other")
        };
        _abilities = Character.Abilities;
        _properties = Character.Properties;
    }

    private void GiftChanged()
    {
        _abilities = Character.Abilities;
        _properties = Character.Properties;
    }

}