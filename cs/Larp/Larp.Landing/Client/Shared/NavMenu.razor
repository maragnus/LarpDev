@using Larp.Landing.Client.Icons

<!--suppress CssUnusedSymbol -->
<style>
    .Navigation-Item {
        display: flex;
        padding-top: 0;
        padding-bottom: 0;
    }
    
    .Navigation-Link {
        display: flex;
        align-items: center;
        text-decoration: none;
        position: relative;
        justify-content: flex-start;
        color: inherit;
        width: 100%;
        padding: 10px 8px;
        font-weight: 500;
        letter-spacing: 0;
        text-transform: none;
    }
    
    .Navigation-Icon {
        color: inherit;
        height: 24px;
    }
    
    .Navigation-Active {
        color: green;
        font-weight: 500;
    }
    
    .Navigation-Active .Navigation-Icon {
        color: green;
    }
</style>

@code {
    private bool IsDrawerOpen { get; set; }

    private void OpenDrawer()
    {
        IsDrawerOpen = true;
        StateHasChanged();
    }

    private void CloseDrawer()
    {
        IsDrawerOpen = false;
        StateHasChanged();
    }

    record NavItem(string Label, RenderFragment Icon, string Path, NavLinkMatch Match);

    private readonly NavItem[] _topItems =
    {
        new("Home", @<HomeIcon/>, "/", NavLinkMatch.All),
        new("Characters", @<PeopleIcon/>, "/characters", NavLinkMatch.Prefix),
        new("Events", @<EventIcon/>, "/events", NavLinkMatch.Prefix),
        new("Clarify", @<BookIcon/>, "/clarify", NavLinkMatch.Prefix),
    };
    
    private readonly NavItem[] _bottomItems =
    {
        new("Profile", @<PersonIcon/>, "/profile", NavLinkMatch.All),
        new("Settings", @<SettingsIcon/>, "/settings", NavLinkMatch.Prefix),
    };
}

<div
    Style="flex-grow: 1;">
    <AppBar
        Position="@AppBarPosition.Static">
        <Toolbar>
            <IconButton
                Edge="@IconButtonEdge.Start"
                Style="margin-right: 16px;"
                Color="@Color.Inherit"
                OnClick="@OpenDrawer"
                aria-label="menu">
                <MenuIcon />
            </IconButton>
            <Typography
                Variant="@TypographyVariant.H6"
                Style="flex-grow: 1;">
                LARP Landing
            </Typography>
            <Button
                Color="@Color.Inherit">
                Login
            </Button>
        </Toolbar>
    </AppBar>
</div>
<Drawer
    Absolute
    PaperStyle="width: 240px;"
    Variant="@DrawerVariant.Temporary"
    Anchor="@Anchor.Left"
    Open="@IsDrawerOpen"
    OnClose="@CloseDrawer">
    <List Style="width: 240px" @key="1">
        <ListItem Button>
            <NavLink
                 ActiveClass="Navigation-Active"
                 class="Navigation-Link"
                 href="/login">
                <ListItemIcon Class="Navigation-Icon"><Avatar><PersonIcon/></Avatar></ListItemIcon>
                <ListItemText Primary="Guest" Secondary="Click to log in"/>
            </NavLink>
        </ListItem>
    </List>
    <Divider/>
    <List Style="width: 240px">
        @foreach (var (key, item) in _topItems.Select((item, key) => (key, item)))
        {
            <ListItem Button @key="@key" Class="Navigation-Item">
                <NavLink
                     ActiveClass="Navigation-Active"
                     class="Navigation-Link"
                     href="@item.Path"
                     Match="@(item.Match)">
                    <ListItemIcon Class="Navigation-Icon">@item.Icon</ListItemIcon>
                    <ListItemText Primary="@item.Label"/>
                </NavLink>
            </ListItem>
        }
    </List>
    <Divider/>
    <List>
       @foreach (var (key, item) in _bottomItems.Select((item, key) => (key, item)))
       {
           <ListItem Button @key="@key" Class="Navigation-Item">
               <NavLink
                    ActiveClass="Navigation-Active"
                    class="Navigation-Link"
                    href="@item.Path"
                    Match="@(item.Match)">
                   <ListItemIcon Class="Navigation-Icon">@item.Icon</ListItemIcon>
                   <ListItemText Primary="@item.Label"/>
               </NavLink>
           </ListItem>
       }
    </List>
</Drawer>
