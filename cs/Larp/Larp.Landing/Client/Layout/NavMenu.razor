@inject NavigationManager NavigationManager

@code {
    IDisposable? _navChange;
    protected override void OnInitialized()
    {
        _navChange = NavigationManager.RegisterLocationChangingHandler(_ =>
        {
            IsDrawerOpen = false;
            return ValueTask.CompletedTask;
        });
    }

    private bool IsDrawerOpen { get; set; }

    private void DrawerToggle()
    {
        IsDrawerOpen = !IsDrawerOpen;
        StateHasChanged();
    }
}

<MudAppBar Color="Color.Primary" Fixed="false" Dense="true">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    <MudText>@PageInfo?.HeaderText</MudText>
    <MudSpacer />
    <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" />
</MudAppBar>
<MudDrawer @bind-Open="@IsDrawerOpen">
    <MudNavMenu>
        <MudNavLink Href="/login" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.AccountCircle">
            <MudText Typo="Typo.body1">Guest</MudText>
            <MudText Typo="Typo.body2">Click to log in</MudText>
        </MudNavLink>
        <MudDivider/>
        <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
        <MudNavLink Href="/characters" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.People">Characters</MudNavLink>
        <MudNavLink Href="/events" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Event">Events</MudNavLink>
        <MudNavLink Href="/clarify" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Book">Clarify</MudNavLink>
        <MudDivider/>
        <MudNavLink Href="/profile" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">Profile</MudNavLink>
        <MudNavLink Href="/admin" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Shield">Administration</MudNavLink>
    </MudNavMenu>
</MudDrawer>

@code {
    [CascadingParameter]
    protected PageInfo? PageInfo { get; set; }
}