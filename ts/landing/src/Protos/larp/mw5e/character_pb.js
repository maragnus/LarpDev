// source: larp/mw5e/character.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.larp.mw5e.Character', null, global);
goog.exportSymbol('proto.larp.mw5e.CharacterSkill', null, global);
goog.exportSymbol('proto.larp.mw5e.CharacterVantage', null, global);
goog.exportSymbol('proto.larp.mw5e.SkillPurchase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.larp.mw5e.CharacterSkill = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.larp.mw5e.CharacterSkill, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.larp.mw5e.CharacterSkill.displayName = 'proto.larp.mw5e.CharacterSkill';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.larp.mw5e.CharacterVantage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.larp.mw5e.CharacterVantage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.larp.mw5e.CharacterVantage.displayName = 'proto.larp.mw5e.CharacterVantage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.larp.mw5e.Character = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.larp.mw5e.Character.repeatedFields_, null);
};
goog.inherits(proto.larp.mw5e.Character, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.larp.mw5e.Character.displayName = 'proto.larp.mw5e.Character';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.larp.mw5e.CharacterSkill.prototype.toObject = function(opt_includeInstance) {
  return proto.larp.mw5e.CharacterSkill.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.larp.mw5e.CharacterSkill} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.larp.mw5e.CharacterSkill.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    purchases: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.larp.mw5e.CharacterSkill}
 */
proto.larp.mw5e.CharacterSkill.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.larp.mw5e.CharacterSkill;
  return proto.larp.mw5e.CharacterSkill.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.larp.mw5e.CharacterSkill} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.larp.mw5e.CharacterSkill}
 */
proto.larp.mw5e.CharacterSkill.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 3:
      var value = /** @type {!proto.larp.mw5e.SkillPurchase} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPurchases(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.larp.mw5e.CharacterSkill.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.larp.mw5e.CharacterSkill.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.larp.mw5e.CharacterSkill} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.larp.mw5e.CharacterSkill.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.larp.mw5e.CharacterSkill.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.CharacterSkill} returns this
 */
proto.larp.mw5e.CharacterSkill.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 rank = 2;
 * @return {number}
 */
proto.larp.mw5e.CharacterSkill.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.CharacterSkill} returns this
 */
proto.larp.mw5e.CharacterSkill.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SkillPurchase type = 3;
 * @return {!proto.larp.mw5e.SkillPurchase}
 */
proto.larp.mw5e.CharacterSkill.prototype.getType = function() {
  return /** @type {!proto.larp.mw5e.SkillPurchase} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.larp.mw5e.SkillPurchase} value
 * @return {!proto.larp.mw5e.CharacterSkill} returns this
 */
proto.larp.mw5e.CharacterSkill.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 purchases = 4;
 * @return {number}
 */
proto.larp.mw5e.CharacterSkill.prototype.getPurchases = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.CharacterSkill} returns this
 */
proto.larp.mw5e.CharacterSkill.prototype.setPurchases = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.larp.mw5e.CharacterSkill} returns this
 */
proto.larp.mw5e.CharacterSkill.prototype.clearPurchases = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.larp.mw5e.CharacterSkill.prototype.hasPurchases = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.larp.mw5e.CharacterVantage.prototype.toObject = function(opt_includeInstance) {
  return proto.larp.mw5e.CharacterVantage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.larp.mw5e.CharacterVantage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.larp.mw5e.CharacterVantage.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rank: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.larp.mw5e.CharacterVantage}
 */
proto.larp.mw5e.CharacterVantage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.larp.mw5e.CharacterVantage;
  return proto.larp.mw5e.CharacterVantage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.larp.mw5e.CharacterVantage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.larp.mw5e.CharacterVantage}
 */
proto.larp.mw5e.CharacterVantage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.larp.mw5e.CharacterVantage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.larp.mw5e.CharacterVantage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.larp.mw5e.CharacterVantage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.larp.mw5e.CharacterVantage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.larp.mw5e.CharacterVantage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.CharacterVantage} returns this
 */
proto.larp.mw5e.CharacterVantage.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 rank = 2;
 * @return {number}
 */
proto.larp.mw5e.CharacterVantage.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.CharacterVantage} returns this
 */
proto.larp.mw5e.CharacterVantage.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.larp.mw5e.Character.repeatedFields_ = [26,27,28,29,30];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.larp.mw5e.Character.prototype.toObject = function(opt_includeInstance) {
  return proto.larp.mw5e.Character.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.larp.mw5e.Character} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.larp.mw5e.Character.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    charactername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    religions: jspb.Message.getFieldWithDefault(msg, 3, ""),
    occupation: jspb.Message.getFieldWithDefault(msg, 4, ""),
    specialty: jspb.Message.getFieldWithDefault(msg, 5, ""),
    enhancement: jspb.Message.getFieldWithDefault(msg, 6, ""),
    homechapter: jspb.Message.getFieldWithDefault(msg, 7, ""),
    publicstory: jspb.Message.getFieldWithDefault(msg, 8, ""),
    privatestory: jspb.Message.getFieldWithDefault(msg, 9, ""),
    homeland: jspb.Message.getFieldWithDefault(msg, 10, ""),
    startingmoonstone: jspb.Message.getFieldWithDefault(msg, 11, 0),
    skilltokens: jspb.Message.getFieldWithDefault(msg, 12, 0),
    courage: jspb.Message.getFieldWithDefault(msg, 20, 0),
    dexterity: jspb.Message.getFieldWithDefault(msg, 21, 0),
    empathy: jspb.Message.getFieldWithDefault(msg, 22, 0),
    passion: jspb.Message.getFieldWithDefault(msg, 23, 0),
    prowess: jspb.Message.getFieldWithDefault(msg, 24, 0),
    wisdom: jspb.Message.getFieldWithDefault(msg, 25, 0),
    skillsList: jspb.Message.toObjectList(msg.getSkillsList(),
    proto.larp.mw5e.CharacterSkill.toObject, includeInstance),
    advantagesList: jspb.Message.toObjectList(msg.getAdvantagesList(),
    proto.larp.mw5e.CharacterVantage.toObject, includeInstance),
    disadvantagesList: jspb.Message.toObjectList(msg.getDisadvantagesList(),
    proto.larp.mw5e.CharacterVantage.toObject, includeInstance),
    spellsList: (f = jspb.Message.getRepeatedField(msg, 29)) == null ? undefined : f,
    flavortraitsList: (f = jspb.Message.getRepeatedField(msg, 30)) == null ? undefined : f,
    unusualfeatures: jspb.Message.getFieldWithDefault(msg, 31, ""),
    cures: jspb.Message.getFieldWithDefault(msg, 32, ""),
    documents: jspb.Message.getFieldWithDefault(msg, 33, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 34, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.larp.mw5e.Character}
 */
proto.larp.mw5e.Character.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.larp.mw5e.Character;
  return proto.larp.mw5e.Character.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.larp.mw5e.Character} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.larp.mw5e.Character}
 */
proto.larp.mw5e.Character.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCharactername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReligions(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOccupation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecialty(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnhancement(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomechapter(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicstory(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivatestory(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeland(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartingmoonstone(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkilltokens(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCourage(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDexterity(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEmpathy(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPassion(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProwess(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWisdom(value);
      break;
    case 26:
      var value = new proto.larp.mw5e.CharacterSkill;
      reader.readMessage(value,proto.larp.mw5e.CharacterSkill.deserializeBinaryFromReader);
      msg.addSkills(value);
      break;
    case 27:
      var value = new proto.larp.mw5e.CharacterVantage;
      reader.readMessage(value,proto.larp.mw5e.CharacterVantage.deserializeBinaryFromReader);
      msg.addAdvantages(value);
      break;
    case 28:
      var value = new proto.larp.mw5e.CharacterVantage;
      reader.readMessage(value,proto.larp.mw5e.CharacterVantage.deserializeBinaryFromReader);
      msg.addDisadvantages(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.addSpells(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.addFlavortraits(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnusualfeatures(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setCures(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocuments(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.larp.mw5e.Character.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.larp.mw5e.Character.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.larp.mw5e.Character} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.larp.mw5e.Character.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCharactername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReligions();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOccupation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSpecialty();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEnhancement();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHomechapter();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPublicstory();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPrivatestory();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getHomeland();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getStartingmoonstone();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSkilltokens();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getCourage();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getDexterity();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getEmpathy();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getPassion();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getProwess();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = message.getWisdom();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getSkillsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      26,
      f,
      proto.larp.mw5e.CharacterSkill.serializeBinaryToWriter
    );
  }
  f = message.getAdvantagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      27,
      f,
      proto.larp.mw5e.CharacterVantage.serializeBinaryToWriter
    );
  }
  f = message.getDisadvantagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      28,
      f,
      proto.larp.mw5e.CharacterVantage.serializeBinaryToWriter
    );
  }
  f = message.getSpellsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      29,
      f
    );
  }
  f = message.getFlavortraitsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      30,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeString(
      31,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeString(
      32,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeString(
      33,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeString(
      34,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string characterName = 2;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getCharactername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setCharactername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string religions = 3;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getReligions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setReligions = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string occupation = 4;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getOccupation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setOccupation = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string specialty = 5;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getSpecialty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setSpecialty = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string enhancement = 6;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getEnhancement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setEnhancement = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string homeChapter = 7;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getHomechapter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setHomechapter = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string publicStory = 8;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getPublicstory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setPublicstory = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string privateStory = 9;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getPrivatestory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setPrivatestory = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string homeland = 10;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getHomeland = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setHomeland = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 startingMoonstone = 11;
 * @return {number}
 */
proto.larp.mw5e.Character.prototype.getStartingmoonstone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setStartingmoonstone = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 skillTokens = 12;
 * @return {number}
 */
proto.larp.mw5e.Character.prototype.getSkilltokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setSkilltokens = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 courage = 20;
 * @return {number}
 */
proto.larp.mw5e.Character.prototype.getCourage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setCourage = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 dexterity = 21;
 * @return {number}
 */
proto.larp.mw5e.Character.prototype.getDexterity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setDexterity = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 empathy = 22;
 * @return {number}
 */
proto.larp.mw5e.Character.prototype.getEmpathy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setEmpathy = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int32 passion = 23;
 * @return {number}
 */
proto.larp.mw5e.Character.prototype.getPassion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setPassion = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int32 prowess = 24;
 * @return {number}
 */
proto.larp.mw5e.Character.prototype.getProwess = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setProwess = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int32 wisdom = 25;
 * @return {number}
 */
proto.larp.mw5e.Character.prototype.getWisdom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setWisdom = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * repeated CharacterSkill skills = 26;
 * @return {!Array<!proto.larp.mw5e.CharacterSkill>}
 */
proto.larp.mw5e.Character.prototype.getSkillsList = function() {
  return /** @type{!Array<!proto.larp.mw5e.CharacterSkill>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.larp.mw5e.CharacterSkill, 26));
};


/**
 * @param {!Array<!proto.larp.mw5e.CharacterSkill>} value
 * @return {!proto.larp.mw5e.Character} returns this
*/
proto.larp.mw5e.Character.prototype.setSkillsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 26, value);
};


/**
 * @param {!proto.larp.mw5e.CharacterSkill=} opt_value
 * @param {number=} opt_index
 * @return {!proto.larp.mw5e.CharacterSkill}
 */
proto.larp.mw5e.Character.prototype.addSkills = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 26, opt_value, proto.larp.mw5e.CharacterSkill, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearSkillsList = function() {
  return this.setSkillsList([]);
};


/**
 * repeated CharacterVantage advantages = 27;
 * @return {!Array<!proto.larp.mw5e.CharacterVantage>}
 */
proto.larp.mw5e.Character.prototype.getAdvantagesList = function() {
  return /** @type{!Array<!proto.larp.mw5e.CharacterVantage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.larp.mw5e.CharacterVantage, 27));
};


/**
 * @param {!Array<!proto.larp.mw5e.CharacterVantage>} value
 * @return {!proto.larp.mw5e.Character} returns this
*/
proto.larp.mw5e.Character.prototype.setAdvantagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 27, value);
};


/**
 * @param {!proto.larp.mw5e.CharacterVantage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.larp.mw5e.CharacterVantage}
 */
proto.larp.mw5e.Character.prototype.addAdvantages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 27, opt_value, proto.larp.mw5e.CharacterVantage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearAdvantagesList = function() {
  return this.setAdvantagesList([]);
};


/**
 * repeated CharacterVantage disadvantages = 28;
 * @return {!Array<!proto.larp.mw5e.CharacterVantage>}
 */
proto.larp.mw5e.Character.prototype.getDisadvantagesList = function() {
  return /** @type{!Array<!proto.larp.mw5e.CharacterVantage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.larp.mw5e.CharacterVantage, 28));
};


/**
 * @param {!Array<!proto.larp.mw5e.CharacterVantage>} value
 * @return {!proto.larp.mw5e.Character} returns this
*/
proto.larp.mw5e.Character.prototype.setDisadvantagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 28, value);
};


/**
 * @param {!proto.larp.mw5e.CharacterVantage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.larp.mw5e.CharacterVantage}
 */
proto.larp.mw5e.Character.prototype.addDisadvantages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 28, opt_value, proto.larp.mw5e.CharacterVantage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearDisadvantagesList = function() {
  return this.setDisadvantagesList([]);
};


/**
 * repeated string spells = 29;
 * @return {!Array<string>}
 */
proto.larp.mw5e.Character.prototype.getSpellsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 29));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setSpellsList = function(value) {
  return jspb.Message.setField(this, 29, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.addSpells = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 29, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearSpellsList = function() {
  return this.setSpellsList([]);
};


/**
 * repeated string flavorTraits = 30;
 * @return {!Array<string>}
 */
proto.larp.mw5e.Character.prototype.getFlavortraitsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 30));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setFlavortraitsList = function(value) {
  return jspb.Message.setField(this, 30, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.addFlavortraits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 30, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearFlavortraitsList = function() {
  return this.setFlavortraitsList([]);
};


/**
 * optional string unusualFeatures = 31;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getUnusualfeatures = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setUnusualfeatures = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearUnusualfeatures = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.larp.mw5e.Character.prototype.hasUnusualfeatures = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional string cures = 32;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getCures = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setCures = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearCures = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.larp.mw5e.Character.prototype.hasCures = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional string documents = 33;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getDocuments = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setDocuments = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearDocuments = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.larp.mw5e.Character.prototype.hasDocuments = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional string notes = 34;
 * @return {string}
 */
proto.larp.mw5e.Character.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.setNotes = function(value) {
  return jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.larp.mw5e.Character} returns this
 */
proto.larp.mw5e.Character.prototype.clearNotes = function() {
  return jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.larp.mw5e.Character.prototype.hasNotes = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * @enum {number}
 */
proto.larp.mw5e.SkillPurchase = {
  SKILL_PURCHASE_FREE: 0,
  SKILL_PURCHASE_OCCUPATION: 1,
  SKILL_PURCHASE_PURCHASE: 2,
  SKILL_PURCHASE_BESTOWED: 3
};

goog.object.extend(exports, proto.larp.mw5e);
